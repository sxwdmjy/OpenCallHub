<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.och.calltask.mapper.CustomerSeasMapper">

    <resultMap type="com.och.calltask.domain.vo.CustomerSeasVo" id="CustomerSeasMap">
        <result property="id" column="id" jdbcType="BIGINT"/>
        <result property="templateId" column="template_id" jdbcType="BIGINT"/>
        <result property="templateName" column="template_name" jdbcType="VARCHAR"/>
        <result property="thirdId" column="third_id" jdbcType="VARCHAR"/>
        <result property="customerInfo" column="customer_info" typeHandler="com.och.system.handler.JsonObjectTypeHandler"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="source" column="source" jdbcType="INTEGER"/>
        <result property="createBy" column="create_by" jdbcType="BIGINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="BIGINT"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

  <sql id="selectCustomerSeasInfoVo">
     
   </sql>
    <select id="getDetail" resultMap="CustomerSeasMap">
        select cs.id,
               cs.template_id,
               ct.name as template_name,
               cs.third_id,
               cs.customer_info,
               cs.phone,
               cs.name,
               cs.sex,
               cs.source,
               cs.create_by,
               cs.create_time,
               cs.update_by,
               cs.update_time,
               cs.del_flag
        from customer_seas cs
                 left join customer_template ct on cs.template_id = ct.id and ct.del_flag = 0
        <where>
            cs.id = #{id}
        </where>
    </select>


    <select id="getList" resultMap="CustomerSeasMap">
        select cs.id,
        cs.template_id,
        ct.name as template_name,
        cs.third_id,
        cs.customer_info,
        cs.phone,
        cs.name,
        cs.sex,
        cs.source,
        cs.create_by,
        cs.create_time,
        cs.update_by,
        cs.update_time,
        cs.del_flag
        from customer_seas cs
        left join customer_template ct on cs.template_id = ct.id and ct.del_flag = 0
        <where>
            cs.del_flag = 0
            <if test="id != null">
                and cs.id = #{id}
            </if>
            <if test="phone != null and phone != ''">
                and cs.phone = #{phone}
            </if>
            <if test="name != null and name != ''">
                and cs.name like concat('%',#{name},'%')
            </if>
            <if test="sex != null">
                and cs.sex = #{sex}
            </if>
            <if test="source != null">
                and cs.source = #{source}
            </if>
            <if test="templateIds != null and templateIds.size() > 0">
                and cs.template_id in
                <foreach item="item" index="index" collection="templateIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

            <if test="beginTime != null">
                and cs.create_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                and cs.create_time &lt;= #{endTime}
            </if>
        </where>
        order by cs.id desc
    </select>

</mapper>

