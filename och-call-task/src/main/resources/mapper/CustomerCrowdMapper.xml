<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.och.calltask.mapper.CustomerCrowdMapper">

    <resultMap type="com.och.calltask.domain.vo.CustomerCrowdVo" id="CustomerCrowdMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="progress" column="progress" jdbcType="INTEGER"/>
        <result property="reason" column="reason" jdbcType="VARCHAR"/>
        <result property="crowdNum" column="crowd_num" jdbcType="INTEGER"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
        <result property="swipe" column="swipe" typeHandler="com.och.system.handler.ConditionObjectTypeHandler"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap type="com.och.calltask.domain.vo.CrowdCustomerVo" id="CrowdCustomerMap">
        <result property="id" column="id" jdbcType="BIGINT"/>
        <result property="thirdId" column="third_id" jdbcType="VARCHAR"/>
        <result property="customerInfo" column="customer_info" typeHandler="com.och.system.handler.JsonObjectTypeHandler"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="source" column="source" jdbcType="INTEGER"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="selectCustomerCrowdInfoVo">
        select id,
               name,
               status,
               type,
               progress,
               reason,
               swipe,
               crowd_num,
               remark,
               create_by,
               create_time,
               update_by,
               update_time,
               del_flag
        from customer_crowd
    </sql>


    <select id="getDetail" resultMap="CustomerCrowdMap">
        <include refid="selectCustomerCrowdInfoVo"/>
        <where>
            id = #{id}
        </where>
    </select>
    <select id="getList" resultMap="CustomerCrowdMap">
        <include refid="selectCustomerCrowdInfoVo"/>
        <where>
            del_flag = 0
            <if test="name != null">
                and name like concat('%',#{name},'%')
            </if>
            <if test="status != null">
                and status = #{status}
            </if>

            <if test="type != null">
                and type = #{type}
            </if>
            <if test="progress != null and progress.size() > 0 ">
                and progress in
                <foreach item="item" collection="progress" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>

            <if test="beginTime != null">
                and create_time &gt;= #{createTime}
            </if>
            <if test="endTime != null">
                and create_time &lt;= #{endTime}
            </if>
        </where>
    </select>


    <select id="pageCustomerList" resultMap="CrowdCustomerMap">
        select
            cs.id,
            cs.template_id,
            cs.third_id,
            cs.customer_info,
            cs.phone,
            cs.name,
            cs.sex,
            cs.source,
            cs.create_by,
            cs.create_time,
            cs.update_by,
            cs.update_time,
            cs.del_flag
        from customer_seas cs
        <where>
            and exists(select 1 from customer_crowd_rel ccl where ccl.customer_id = cs.id and ccl.crowd_id = #{crowdId} and ccl.del_flag = 0)
            <if test="customerId != null">
                and cs.id = #{customerId}
            </if>
            <if test="customerName != null and customerName != ''">
                and cs.name like concat('%',#{customerName},'%')
            </if>
            <if test="customerPhone != null and customerPhone != ''">
                and cs.phone = #{customerPhone}
            </if>
            <if test="customerSex != null">
                and cs.sex = #{customerSex}
            </if>
            <if test="customerSource != null">
                and cs.source = #{customerSource}
            </if>
            <if test="beginTime != null">
                and cs.create_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                and cs.create_time &lt;= #{endTime}
            </if>
            and cs.del_flag = 0
        </where>
        order by cs.id desc
    </select>

</mapper>

